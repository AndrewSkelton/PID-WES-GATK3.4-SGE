#!/bin/bash
#$ -cwd -V
#$ -pe smp 1
#$ -l h_vmem=10G
#$ -e ~/log
#$ -o ~/log

source ~/.bash_profile

#-------------------------------------------------------------------------------------------#
#  Author      : Andrew J Skelton                                                           |
#  Language    : Bash                                                                       |
#  Study       : Exome Project                                                              |
#  Type        : Cluster Submission Script                                                  |
#  Description : Use MultiQC to generate per batch Report                                   |
#  Input       : Bridge base                                                                |
#  Input       : Log File                                                                   |
#  Resources   : Memory     - 10GB                                                          |
#  Resources   : Processors - 1                                                             |
#-------------------------------------------------------------------------------------------#


##'Add Modules
##'-----------------------------------------------------------------------------------------#
MULTIQC="/home/nas151/.local/bin/multiqc"
OUT_BASE="${1}/Analysis/MultiQC/"
module load apps/python27/2.7.8
module load libs/python/numpy/1.9.1-python27-2.7.8
module load libs/python/matplotlib/1.3.1-python27
BATCH_NUM=0
BATCH_PAR=0
mkdir -p ${OUT_BASE}
##'-----------------------------------------------------------------------------------------#


##' Add to Log
##'-----------------------------------------------------------------------------------------#
echo $(date)" : Starting A MultiQC Batch-Wise Run..." > ${2}
##'-----------------------------------------------------------------------------------------#


##' Outer Loop Start
##'-----------------------------------------------------------------------------------------#
for i in ${1}/QC/*
do
  let "BATCH_PAR++"
  PAR_CURRENT=$(basename "${i}")
##'-----------------------------------------------------------------------------------------#


  ##' Add to Log
  ##'-----------------------------------------------------------------------------------------#
  echo $(date)" : Running MultiQC on Parent Directory: ${PAR_CURRENT}" >> ${2}
  ##'-----------------------------------------------------------------------------------------#


  ##' Inner Loop Start
  ##'-----------------------------------------------------------------------------------------#
  for j in ${i}/*
  do
    let "BATCH_NUM++"
    BATCH_CURRENT=$(basename "${j}")
  ##'-----------------------------------------------------------------------------------------#


  ##' Add to Log
  ##'-----------------------------------------------------------------------------------------#
  echo -n $(date)" : Running MultiQC on Batch: ${BATCH_CURRENT}..." >> ${2}
  ##'-----------------------------------------------------------------------------------------#


  ##' Run MultiQC
  ##'-----------------------------------------------------------------------------------------#
  if [ -f "${OUT_BASE}/${PAR_CURRENT}_${BATCH_CURRENT}_multiqc_report.html" ]; then
    echo "Skip" >> ${2}
    echo $(date)" : MultiQC Report for ${PAR_CURRENT}_${BATCH_CURRENT} Already Exists, Skipping..." >> ${2}
  else
    $MULTIQC --outdir $OUT_BASE --title "${PAR_CURRENT}_${BATCH_CURRENT}" $j
  fi
  ##'-----------------------------------------------------------------------------------------#


  ##' Add to Log
  ##'-----------------------------------------------------------------------------------------#
  echo "Done!" >> ${2}
  ##'-----------------------------------------------------------------------------------------#


  ##' Inner Loop Close
  ##'-----------------------------------------------------------------------------------------#
  done
  ##'-----------------------------------------------------------------------------------------#


  ##' Add to Log
  ##'-----------------------------------------------------------------------------------------#
  echo $(date)" : Complete on Parent: ${PAR_CURRENT}" >> ${2}
  ##'-----------------------------------------------------------------------------------------#


##' Outer Loop Close
##'-----------------------------------------------------------------------------------------#
done
##'-----------------------------------------------------------------------------------------#
